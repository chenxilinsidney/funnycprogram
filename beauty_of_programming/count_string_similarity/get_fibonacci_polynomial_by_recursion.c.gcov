        -:    0:Source:get_fibonacci_polynomial_by_recursion.c
        -:    0:Graph:get_fibonacci_polynomial_by_recursion.gcno
        -:    0:Data:get_fibonacci_polynomial_by_recursion.gcda
        -:    0:Runs:1
        -:    0:Programs:1
        -:    1:/**
        -:    2: * @file get_fibonacci_polynomial_by_recursion.c
        -:    3: * @brief get the nth member of the fibonacci sequence by recursion.
        -:    4: * the fibonacci sequence index begin from 0th:
        -:    5: * 1, 1, 2, 3, 5, 8, 13, 21, 35....
        -:    6: * @author chenxilinsidney
        -:    7: * @version 1.0
        -:    8: * @date 2014-12-31
        -:    9: */
        -:   10:
        -:   11:#include <stdlib.h>
        -:   12:#include <stdio.h>
        -:   13:// #define NDEBUG
        -:   14:#include <assert.h>
        -:   15:
        -:   16:// #define NDBG_PRINT
        -:   17:#include "debug_print.h"
        -:   18:
        -:   19:typedef int TYPE;
        -:   20:
        -:   21:#define NUM  4
        -:   22:
function fib called 9 returned 100% blocks executed 94%
        9:   23:TYPE fib(TYPE index)
        -:   24:{
        9:   25:    assert(index >= 0);
branch  0 taken 0% (fallthrough)
branch  1 taken 100%
call    2 never executed
        9:   26:    DEBUG_PRINT_STRING("In recursion now.\n");
call    0 returned 100%
        9:   27:    DEBUG_PRINT_VALUE("%d", index);
call    0 returned 100%
        9:   28:    if(index == 0 || index == 1) {
branch  0 taken 78% (fallthrough)
branch  1 taken 22%
branch  2 taken 43% (fallthrough)
branch  3 taken 57%
        5:   29:        DEBUG_PRINT_STRING("get first and second index 0/1.\n");
call    0 returned 100%
        5:   30:        DEBUG_PRINT_VALUE("%d", index);
call    0 returned 100%
        5:   31:        DEBUG_PRINT_STRING("Out recursion now.\n");
call    0 returned 100%
        5:   32:        return 1;
        -:   33:    } else {
        4:   34:        TYPE temp = fib(index - 1) + fib(index - 2);
call    0 returned 100%
call    1 returned 100%
        4:   35:        DEBUG_PRINT_VALUE("%d", temp);
call    0 returned 100%
        4:   36:        DEBUG_PRINT_VALUE("%d", index);
call    0 returned 100%
        4:   37:        DEBUG_PRINT_STRING("Out recursion now.\n");
call    0 returned 100%
        4:   38:        return temp;
        -:   39:    }
        -:   40:}
        -:   41:
function main called 1 returned 100% blocks executed 100%
        1:   42:int main(void)
        -:   43:{
        1:   44:    printf("index = %d\n", NUM);
call    0 returned 100%
        1:   45:    printf("fib = %d\n", fib(NUM));
call    0 returned 100%
call    1 returned 100%
        1:   46:    return EXIT_SUCCESS;
        -:   47:}
