        -:    0:Source:count_number_1_v2.c
        -:    0:Graph:count_number_1_v2.gcno
        -:    0:Data:count_number_1_v2.gcda
        -:    0:Runs:1
        -:    0:Programs:1
        -:    1:/**
        -:    2: * @file count_number_1_v2.c
        -:    3: * @brief count the number 1 for all number less than N.
        -:    4: * @author chenxilinsidney
        -:    5: * @version 1.0
        -:    6: * @date 2014-12-28
        -:    7: */
        -:    8:
        -:    9:#include <stdlib.h>
        -:   10:#include <stdio.h>
        -:   11:
        -:   12:typedef long long TYPE;
        -:   13:TYPE N = 10000000000;
        -:   14:
function main called 1 returned 100% blocks executed 91%
        1:   15:int main(void)
        -:   16:{
        -:   17:    TYPE i;
        1:   18:    TYPE sum = 0;
        1:   19:    TYPE bits = 1;
        1:   20:    TYPE high_bit_value = 0;
        1:   21:    TYPE current_bit_value = 0;
        1:   22:    TYPE low_bit_value = 0;
       13:   23:    while(bits <= N) {
branch  0 taken 92%
branch  1 taken 8% (fallthrough)
       11:   24:        high_bit_value = N / (10 * bits);
        -:   25:        // current_bit_value = (N % (10 * bits)) / bits;
        -:   26:        // 下面赋值参考编程之美例程优化
       11:   27:        current_bit_value = (N / bits) % 10;
        -:   28:        // low_bit_value = (N % (10 * bits)) % bits;
        -:   29:        // 下面赋值参考编程之美例程优化
       11:   30:        low_bit_value = N - (N / bits) * bits;
       11:   31:        if (0 == current_bit_value)
branch  0 taken 91% (fallthrough)
branch  1 taken 9%
       10:   32:            sum += bits * high_bit_value;
        1:   33:        else if(1 == current_bit_value)
branch  0 taken 100% (fallthrough)
branch  1 taken 0%
        1:   34:            sum += bits * high_bit_value + low_bit_value + 1;
        -:   35:        else
    #####:   36:            sum += bits * (high_bit_value + 1);
       11:   37:        bits *= 10;
        -:   38:    }
        1:   39:    printf("sum of number 1 in %lld is %lld.\n", N, sum);
call    0 returned 100%
        1:   40:    return EXIT_SUCCESS;
        -:   41:}
